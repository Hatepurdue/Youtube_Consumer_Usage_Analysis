Question 1:
-- Create a package specification
CREATE OR REPLACE PACKAGE YTVideoPackage AS
  PROCEDURE GetAvgHighestViews;
END YTVideoPackage;

-- Create a package body
CREATE OR REPLACE PACKAGE BODY YTVideoPackage AS
  PROCEDURE GetAvgHighestViews IS
    avgHighestViews NUMBER;
  BEGIN
    -- Query logic
    WITH MaxViewPerCategory AS (
        SELECT
            categoryid,
            MAX(view_count) AS max_views
        FROM
            YTvideo
        GROUP BY
            categoryid
    )
    SELECT AVG(max_views) INTO avgHighestViews
    FROM MaxViewPerCategory;

    -- Print the result
    DBMS_OUTPUT.PUT_LINE('Average Highest Views: ' || TO_CHAR(avgHighestViews));
  END GetAvgHighestViews;
END YTVideoPackage;


Question 2:
-- Create a package specification
CREATE OR REPLACE PACKAGE ChannelPackage AS
  PROCEDURE GetTotalSubscribers(p_channel_name IN VARCHAR2);
END ChannelPackage;

-- Create a package body
CREATE OR REPLACE PACKAGE BODY ChannelPackage AS
  PROCEDURE GetTotalSubscribers(p_channel_name IN VARCHAR2) IS
    v_country VARCHAR2(256);
    v_total_subscribers NUMBER;
  BEGIN
    -- Query logic
    SELECT
        COUNTRY,
        SUM(SUBSCRIBERS) INTO v_country, v_total_subscribers
    FROM
        CHANNEL
    WHERE
        YOUTUBER = p_channel_name
    GROUP BY
        COUNTRY
    ORDER BY
        v_total_subscribers DESC;

    -- Print the result
    DBMS_OUTPUT.PUT_LINE('Channel: ' || p_channel_name || ', Country: ' || v_country || ', Total Subscribers: ' || TO_CHAR(v_total_subscribers));
  END GetTotalSubscribers;
END ChannelPackage;

Question 3:
-- Create a package specification
CREATE OR REPLACE PACKAGE YTVideoPackage AS
  PROCEDURE GetTopVideoLikesToDislikesRatio;
END YTVideoPackage;

-- Create a package body
CREATE OR REPLACE PACKAGE BODY YTVideoPackage AS
  PROCEDURE GetTopVideoLikesToDislikesRatio IS
    v_video_id VARCHAR2(50);
    v_avg_likes_to_dislikes_ratio NUMBER;
  BEGIN
    -- Query logic
    SELECT
        video_id,
        AVG(likes / dislikes) INTO v_video_id, v_avg_likes_to_dislikes_ratio
    FROM
        YTvideo
    WHERE
        dislikes > 0  -- Avoid division by zero
    GROUP BY
        video_id
    ORDER BY
        v_avg_likes_to_dislikes_ratio DESC
    FETCH FIRST 1 ROW ONLY;

    -- Print the result
    DBMS_OUTPUT.PUT_LINE('Top Video ID: ' || v_video_id || ', Average Likes to Dislikes Ratio: ' || TO_CHAR(v_avg_likes_to_dislikes_ratio));
  END GetTopVideoLikesToDislikesRatio;
END YTVideoPackage;

Question 4:
-- Create a procedure
CREATE OR REPLACE PROCEDURE GetTopSubscribersChannels AS
BEGIN
  FOR channel_rec IN (
    SELECT RANK() OVER (ORDER BY SUBSCRIBERS DESC) AS RANK,
           YOUTUBER,
           SUBSCRIBERS
    FROM Channel
    WHERE ROWNUM <= 10
    ORDER BY SUBSCRIBERS DESC
  ) LOOP
    -- Print the result
    DBMS_OUTPUT.PUT_LINE('Rank: ' || channel_rec.RANK || ', YouTuber: ' || channel_rec.YOUTUBER || ', Subscribers: ' || TO_CHAR(channel_rec.SUBSCRIBERS));
  END LOOP;
END GetTopSubscribersChannels;
/
